{"version":3,"sources":["components/firebase.js","components/SchoolDetails.js","components/Bookmark.js","components/School.js","components/Search.js","components/Nav.js","components/AddSchool.js","components/Notes.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SchoolDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayDetails","_this$props$schoolMor","schoolMoreInfo","bestPhoto","name","contact","location","description","url","react_default","a","createElement","react","className","onClick","closeModal","ref","closeModalButton","tabIndex","aria-label","undefined","src","concat","prefix","suffix","alt","formattedAddress","facebook","target","rel","href","facebookName","twitter","formattedPhone","React","createRef","current","focus","modalStatus","Component","Bookmark","handleClick","bookmark","database","once","response","data","val","bookmarkArray","item","push","dbKey","id","forEach","school","bookmarkId","setState","ariaBookmark","remove","addBookmark","state","_this2","length","_this3","School","setBookmarkState","moreInfo","moreInfoID","axios","get","params","client_id","clientID","keyCounter","client_secret","clientSecret","v","then","res","venue","catch","error","status","handleChange","e","userSearch","value","schoolsList","filter","toLowerCase","indexOf","bookmarked","aria-live","react_scroll_up_button","AnimationDuration","ShowAtPosition","style","fill","height","width","right","border","background","htmlFor","type","placeholder","onChange","Array","isArray","map","schoolName","address","city","country","key","aria-hidden","components_Bookmark","components_SchoolDetails","Search","apiCall","near","userInput","categoryId","institution","radius","intent","limit","result","RegEx","filteredList","venues","categories","shortName","test","category","defineProperty","handleSubmit","swal","title","text","icon","jump","duration","offset","a11y","preventDefault","selectSchoolId","onSubmit","checked","components_School","userSelectSchoolId","Nav","react_router_dom","to","AddSchool","uuid","v4","note","Notes","event","dbRef","selectedId","userName","child","set","userAddress","userCategory","userNote","editNote","found","bookmarkList","find","modalOpen","removeBookmark","handleScroll","focusHere","prevProps","prevState","on","updateBookmark","action","components_AddSchool","Footer","App","components_Nav","react_router","exact","path","component","components_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d73b2a09.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA4yDbpMJo_81wiX8tvikLe7fkrVeJuo4w\",\r\n  authDomain: \"collegenav-2e04d.firebaseapp.com\",\r\n  databaseURL: \"https://collegenav-2e04d.firebaseio.com\",\r\n  projectId: \"collegenav-2e04d\",\r\n  storageBucket: \"collegenav-2e04d.appspot.com\",\r\n  messagingSenderId: \"261170856716\",\r\n  appId: \"1:261170856716:web:a7953ec167b2a338\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component, Fragment } from 'react';\r\n\r\nclass SchoolDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.closeModalButton = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // gives focus to the button\r\n    this.closeModalButton.current.focus();\r\n  }\r\n\r\n  // display details function\r\n  displayDetails = () => {\r\n    const { bestPhoto, name, contact, location, description, url } = this.props.schoolMoreInfo;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"detailsOverlay\" />\r\n\r\n        <div className=\"detailsModal\">\r\n          <div className=\"detailsFlex\">\r\n            {/* close modal button */}\r\n            <button\r\n              onClick={this.props.closeModal}\r\n              className=\"closeButton\"\r\n              ref={this.closeModalButton}\r\n              tabIndex=\"5\"\r\n            >\r\n              <i className=\"fas fa-times\" aria-label=\"close modal\" />\r\n            </button>\r\n\r\n            {/* display a photo if available */}\r\n            {bestPhoto !== undefined ? (\r\n              <div className=\"imgWrapper\">\r\n                <img\r\n                  src={`${bestPhoto.prefix}400x400${bestPhoto.suffix}`}\r\n                  alt={`${name}`}\r\n                  tabIndex=\"5\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"smallInfoWrapper\">\r\n              <p tabIndex=\"5\">{name}</p>\r\n              <p tabIndex=\"5\">{location.formattedAddress}</p>\r\n\r\n              {/* display facebook link if available */}\r\n              {contact.facebook ? (\r\n                <p>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={`https://www.facebook.com/${contact.facebook}`}\r\n                    tabIndex=\"5\"\r\n                  >\r\n                    <i className=\"fab fa-facebook\" aria-label=\"Go to facebook\" />{' '}\r\n                    {contact.facebookName}\r\n                  </a>\r\n                </p>\r\n              ) : null}\r\n\r\n              {/* display twitter link if available */}\r\n              {contact.twitter ? (\r\n                <p>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={`https://twitter.com/${contact.twitter}`}\r\n                    tabIndex=\"5\"\r\n                  >\r\n                    <i className=\"fab fa-twitter\" aria-label=\"Go to twitter\" /> @{contact.twitter}\r\n                  </a>\r\n                </p>\r\n              ) : null}\r\n\r\n              {/* display website link if available */}\r\n              {url !== undefined ? (\r\n                <p>\r\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={url} tabIndex=\"5\">\r\n                    <i className=\"fas fa-link\" aria-label=\"Go to website\" /> Website\r\n                  </a>\r\n                </p>\r\n              ) : null}\r\n\r\n              {/* display address if available */}\r\n              {contact.formattedAddress ? (\r\n                <p tabIndex=\"5\">\r\n                  <span>\r\n                    <i className=\"fas fa-phone\" />\r\n                  </span>{' '}\r\n                  {contact.formattedPhone}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n\r\n            {/* display description if available */}\r\n            <div className=\"descriptionWrapper\">\r\n              {description !== undefined ? <p tabIndex=\"5\">{description}</p> : null}\r\n            </div>\r\n            {/* end of wrappers */}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div className={`modalWrapper ${this.props.modalStatus}`}>{this.displayDetails()}</div>;\r\n  }\r\n}\r\n\r\nexport default SchoolDetails;\r\n","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nclass Bookmark extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // bookmark class name for non-bookmarked schools\r\n      bookmark: 'far fa-bookmark',\r\n      // corresponding aria-label for bookmark\r\n      ariaBookmark: 'item not bookmarked'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n    // takes snapshot of firebase\r\n    dbRef.once('value', response => {\r\n      const data = response.val();\r\n      const bookmarkArray = [];\r\n\r\n      // loop through the returned data and push the keys of each firebase item to an array\r\n      for (let item in data) {\r\n        bookmarkArray.push({\r\n          id: data[item].id\r\n        });\r\n      }\r\n\r\n      // if there is at least one entry in firebase compares if any schools were previously saved into firebase against stored search results\r\n      if (bookmarkArray !== null && bookmarkArray.length > 0) {\r\n        bookmarkArray.forEach(school => {\r\n          // matches have the bookmark icon listed as bookmarked (ie. filled in)\r\n          if (school.id === this.props.bookmarkId) {\r\n            this.setState({\r\n              bookmark: 'fas fa-bookmark',\r\n              ariaBookmark: 'item bookmarked'\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // handle click for adding a bookmark\r\n  handleClick = bookmark => {\r\n    // check if the search item returned was bookmarked or not\r\n    if (bookmark === 'fas fa-bookmark') {\r\n      // if it is not bookmarked, be able to add it\r\n      const dbRef = firebase.database().ref();\r\n      dbRef.once('value', response => {\r\n        const data = response.val();\r\n        const bookmarkArray = [];\r\n\r\n        for (let item in data) {\r\n          bookmarkArray.push({\r\n            dbKey: item,\r\n            id: data[item].id\r\n          });\r\n        }\r\n\r\n        bookmarkArray.forEach(school => {\r\n          if (school.id === this.props.bookmarkId) {\r\n            this.setState({\r\n              bookmark: 'far fa-bookmark',\r\n              ariaBookmark: 'item not bookmarked'\r\n            });\r\n            const dbRemove = firebase.database().ref(school.dbKey);\r\n            dbRemove.remove();\r\n          }\r\n        });\r\n      });\r\n    } else if (bookmark === 'far fa-bookmark') {\r\n      // if it is bookmarked, remove the bookmark\r\n      this.setState({\r\n        bookmark: 'fas fa-bookmark',\r\n        ariaBookmark: 'item bookmarked'\r\n      });\r\n      this.props.addBookmark(this.props.bookmarkId);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bookmarkPosition\">\r\n        <button className=\"bookmark\" onClick={() => this.handleClick(this.state.bookmark)}>\r\n          {/* icon changes based on toggle in state of class name */}\r\n          <i\r\n            className={`${this.state.bookmark} bookmarkIcon`}\r\n            aria-label={this.state.ariaBookmark}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bookmark;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { CircleArrow as ScrollUpButton } from 'react-scroll-up-button'; //Add this line Here\r\n\r\nimport SchoolDetails from './SchoolDetails.js';\r\nimport Bookmark from './Bookmark.js';\r\n\r\nclass School extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // state of the bookmark false = doesn't exist in firebase, true = exist in firebase\r\n      bookmarked: false,\r\n      // object returned from the more info api call\r\n      schoolMoreInfo: {},\r\n      // modal class status of close or open to display the modal\r\n      modalStatus: 'close',\r\n      // array of keys to loop through for more details api call as limited to 50\r\n      clientID: [\r\n        'JYPGSEYBVO44BBH553GNVMI1OCUCDFTFZUS2H0X5JLMCMOVY',\r\n        'FIQECXQNZC4NEV00SFTF3535BMLFZSUW2XXHXEERFGTTCJDG',\r\n        'CJ4XSVLTY1JQ3SPHZV00JRFHCFAIXO5Y1HAASCOPGXG3URXV',\r\n        'MATE2LSJXUO3JS3LXR1NMMTSUE1PGF15ADCMGRUA23UCVVDM',\r\n        'QZIM15RPPGTGIA5QB0NA3ZMK3UUOSR1GU12SJLQG1MOYRNPA',\r\n        'NJZBAFQGJBCPNIDWS2FJ4OC1SCXB34QCAFPVJDDBKU2GANFO',\r\n        'VGQEXUC1OBLYR2OGNSCLDDA0Z3V1XYT35BVUR5KXOZ2SER5A',\r\n        'WWHHWA0S4GFHODY54K2FZS5XP1YROPRBPDRVG31MUMNGKDMM',\r\n        '2NFNP2CN0KXN5G0INYBVQZOZUIC0D3XT0FOZXZRPVQN4GZZA',\r\n        'VMT1CVWVRRTVEEOJWSER3UPCWUKR11INNAGCYRFDVGNCT4Y5',\r\n        'SUXPJ05HNSW0NCIBMJJ2SHHA3DJMYBLM4FVFPOG5Y1TA3VC1',\r\n        'SSZTT4XQDRSNJDAJVQTNGBUSM1ABD32WT1VG3C5Z1XND33H2',\r\n        'EI1UC5BD2LNXQGTNN4SW0DZMDI5W3QNQ3A4ZNCEWP54ZSY0JClient'\r\n      ],\r\n\r\n      clientSecret: [\r\n        'XBVDWZV2LUQS3RUWTMJJQVJMKZY5HACXHKCGT4ZXVHHXX5K3',\r\n        'EQZ42P3U5DO5PVOQVKG4AQFEDUAPVQ4ZTIOEDDLMER2EJFJX',\r\n        'WUABEMQMIZBR2LSKFURNG4NY2IF10CDAPAX0QSWWYGFGV2ZP',\r\n        'SZRKDMSYSFHU23FQLJR4VXRLHBBQQC1MLJCKSACB5A2EVGPS',\r\n        'VUM2WEQ55KAX3405NTCPFR145DKCD3FUS5YM0GWNJYXEJGA2',\r\n        'HBFVKQJJDP4HLH0F4DG15DMXRV1GMOMH0LTIFSMFMYYLGNFB',\r\n        '3TNU5JJ4EPOKSBEHMLUXJTXBUJTFNRYG5EO203ITHUAHOO5C',\r\n        'DV2P4N505ZWOEGEZQUCDQ0FV5OJ3HDW1RVL44VQQYCNC13QW',\r\n        '5EWVDITYF2KCEB4ZHY32TN0XV31ONYEDXX5A1YMPDBMBHLIC',\r\n        '3XQL24IHR2TIODEGQ5WH0CW03K3E2G4OCR4VAORZ23CNHZRO',\r\n        '0KKBUXNYC4HWALSJTL2UA0QGZJQQ5X0UOZIPK5ROL03RPPZA',\r\n        'KMO0VYQBDDXMGZ2QM4BJIFB2D0TB0ZMCEWE3LW1KBO2LIIH2',\r\n        'D50NHW2CPNKH1I3APUMVBT4XON33QK3HLW225P5N023MXL4O'\r\n      ],\r\n\r\n      // key counter to step through keys\r\n      keyCounter: 0,\r\n      // id that corresponds to the selected school for more info\r\n      moreInfoID: null,\r\n      // user input for filtering the school list\r\n      userSearch: '',\r\n      // list that is stored to be filtered over\r\n      schoolsList: []\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    // sets the state with the schools list that was passed down as prop\r\n    this.setState({\r\n      schoolsList: props.schoolsList\r\n    });\r\n  }\r\n\r\n  // calls the bookmark state from the parent component\r\n  addBookmark = id => {\r\n    this.props.setBookmarkState(id);\r\n  };\r\n\r\n  // changes the modal class name to close it\r\n  closeModal = () => {\r\n    this.setState({\r\n      modalStatus: 'close'\r\n    });\r\n  };\r\n\r\n  // make API call for more info\r\n  moreInfo = id => {\r\n    // stores the ID in the event this moreInfo function needs to be called again from increased key count\r\n    this.setState({\r\n      moreInfoID: id\r\n    });\r\n\r\n    axios\r\n      .get(`https://api.foursquare.com/v2/venues/${id}`, {\r\n        params: {\r\n          // gets the id and secret from the state\r\n          client_id: this.state.clientID[this.state.keyCounter],\r\n          client_secret: this.state.clientSecret[this.state.keyCounter],\r\n          v: 20190601\r\n        }\r\n      })\r\n      .then(res => {\r\n        const schoolMoreInfo = res.data.response.venue;\r\n\r\n        this.setState({\r\n          // sets state with the more info returned from the api\r\n          schoolMoreInfo: schoolMoreInfo,\r\n          // changes modal class so it opens\r\n          modalStatus: 'open'\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // if the response error is status 429\r\n        if (error.response.status === 429) {\r\n          if (this.state.keyCounter < this.state.clientID.length - 1) {\r\n            // increase the key counter by one step\r\n            this.setState(\r\n              {\r\n                keyCounter: this.state.keyCounter + 1\r\n              },\r\n              () => {\r\n                // call the more info function again using the key new key count in state\r\n                this.moreInfo(this.state.moreInfoID);\r\n              }\r\n            );\r\n          } else {\r\n            this.setState({\r\n              keyCounter: 0\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  // filter results based on change\r\n  handleChange = e => {\r\n    this.setState({\r\n      userSearch: e.target.value\r\n    });\r\n\r\n    // if the search query is empty or null reverts to the master list from props\r\n    if (e.target.value === '') {\r\n      this.setState({\r\n        schoolsList: this.props.schoolsList\r\n      });\r\n    } else {\r\n      // search the list for the string\r\n      const schoolsList = this.props.schoolsList.filter(school => {\r\n        return school.name.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1;\r\n      });\r\n\r\n      // sets the state with the new filtered school list\r\n      this.setState({\r\n        schoolsList\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"schoolResults wrapper\" aria-live=\"polite\">\r\n          {/* component imported react-scroll-up */}\r\n          <ScrollUpButton\r\n            AnimationDuration={500}\r\n            ShowAtPosition={350}\r\n            style={{\r\n              fill: `#073330`,\r\n              height: 30,\r\n              width: 30,\r\n              right: 15,\r\n              border: `3px solid #073330`,\r\n              background: `rgba(255, 255, 255, 0.848)`\r\n            }}\r\n          />\r\n          {/* only display the filter when a list of schools is returned */}\r\n          {this.props.schoolsList.length > 0 ? (\r\n            <div className=\"schoolsListSearchInput singleContent\">\r\n              <label htmlFor=\"schoolsListSearch\">Filter Search:</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"search\"\r\n                name=\"userSearch\"\r\n                value={this.state.userSearch}\r\n                id=\"schoolsListSearch\"\r\n                className=\"schoolsListSearch\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          ) : null}\r\n\r\n          <ul className=\"schoolsList\" aria-live=\"polite\">\r\n            {/* checks if the school list is an array otherwise prints a string */}\r\n            {Array.isArray(this.state.schoolsList) ? (\r\n              this.state.schoolsList.map(school => {\r\n                const { id, name: schoolName, location } = school;\r\n                const { address, city, country } = location;\r\n\r\n                return (\r\n                  <li key={id} className=\"result singleContent\" tabIndex=\"0\" aria-hidden=\"false\">\r\n                    <p className=\"resultName\">{schoolName}</p>\r\n                    <p className=\"resultAddress\">\r\n                      {address} - {city}\r\n                    </p>\r\n                    <p className=\"resultCountry\">{country}</p>\r\n\r\n                    <Bookmark bookmarkId={id} addBookmark={this.addBookmark} />\r\n\r\n                    <button className=\"generalButton\" onClick={() => this.moreInfo(id)}>\r\n                      More Info\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })\r\n            ) : (\r\n              // error message returned if an arrary of schools isn't returned from the API call\r\n              <li className=\"noResult singleContent\">\r\n                <p className=\"resultName\">{this.props.schoolsList}</p>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        {this.state.modalStatus === 'open' ? (\r\n          // modal component to be displayed\r\n          <SchoolDetails\r\n            schoolMoreInfo={this.state.schoolMoreInfo}\r\n            modalStatus={this.state.modalStatus}\r\n            closeModal={this.closeModal}\r\n          />\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default School;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport firebase from './firebase.js';\r\nimport jump from 'jump.js';\r\nimport swal from 'sweetalert';\r\n\r\nimport School from './School.js';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // input from search field\r\n      userInput: '',\r\n      // input for the type of school (college, university, trade school)\r\n      institution: '',\r\n      // specific id for more info about each school\r\n      selectSchoolId: '',\r\n      // return from the API\r\n      schoolsList: []\r\n    };\r\n  }\r\n\r\n  // calls the API\r\n  apiCall = () => {\r\n    axios\r\n      .get('https://api.foursquare.com/v2/venues/search', {\r\n        params: {\r\n          client_id: 'JYPGSEYBVO44BBH553GNVMI1OCUCDFTFZUS2H0X5JLMCMOVY',\r\n          client_secret: 'XBVDWZV2LUQS3RUWTMJJQVJMKZY5HACXHKCGT4ZXVHHXX5K3',\r\n          v: 20190601,\r\n          near: this.state.userInput,\r\n          categoryId: this.state.institution,\r\n          // 25 km centre of city search\r\n          radius: 25000,\r\n          // checkin method returns most popular places\r\n          intent: 'checkin',\r\n          // max number of results that can be returned from api\r\n          limit: 50\r\n        }\r\n      })\r\n      .then(result => {\r\n        // RegEx test to filter out undesirable items returned in search\r\n        const RegEx = /centre|center|park|building|pool|hall|office of le president|division of|department|campus|residence|faculty|campus|public|room/i;\r\n\r\n        // response returned from API\r\n        const schoolsList = result.data.response.venues;\r\n\r\n        // filter out only relevant information from the API using RegEx\r\n        const filteredList = schoolsList.filter(key => {\r\n          const name = key.categories[0].shortName;\r\n\r\n          return (\r\n            (name === 'University' || name === 'Community College' || name === 'Trade School') &&\r\n            !RegEx.test(key.name) &&\r\n            key.location.address !== undefined\r\n          );\r\n        });\r\n\r\n        this.setState({\r\n          schoolsList: filteredList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // error message if no results are returned\r\n        if (error.response.status === 400) {\r\n          this.setState({\r\n            schoolsList: `We're sorry. There are zero results for your search.`\r\n          });\r\n\r\n          // if the user ends up somehow making more 950 calls a day\r\n        } else if (error.response.status === 429) {\r\n          this.setState({\r\n            schoolsList:\r\n              'You have exceeded your daily limit of searches. You should probably go outside...'\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  // bookmark a school\r\n  setBookmarkState = id => {\r\n    // goes through the school list array to find the corresponding info of the selected ID and add to firebase\r\n    this.state.schoolsList.forEach(school => {\r\n      if (school.id === id) {\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.push({\r\n          name: school.name,\r\n          address: school.location.address,\r\n          id: school.id,\r\n          category: school.categories[0].name\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // handle change for form\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // handle submit of form\r\n  handleSubmit = e => {\r\n    // check if all fields are entered\r\n    if (this.state.institution.length === 0 || this.state.userInput.length === 0) {\r\n      swal({\r\n        title: 'oops',\r\n        text: 'please make sure all fields are entered',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      // RegEx test to make sure user can't submit a blank spaces as a search\r\n      if (/^\\s*$/.test(this.state.userInput) === false) {\r\n        this.apiCall();\r\n\r\n        jump('.schoolResults', {\r\n          duration: 1000,\r\n          offset: -50,\r\n          a11y: true\r\n        });\r\n      } else {\r\n        swal({\r\n          title: 'oops',\r\n          text: 'please enter a search',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"searchContainer\">\r\n          <form onSubmit={this.handleSubmit} className=\"searchForm wrapper\">\r\n            <div className=\"smallWrapper\">\r\n              <div className=\"instructions\">\r\n                <p>Search for a school near you!</p>\r\n                <p>(Select an Institution Type)</p>\r\n              </div>\r\n              <div className=\"radioButtons\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"institution\"\r\n                  id=\"university\"\r\n                  className=\"radioButtonDot\"\r\n                  value=\"4bf58dd8d48988d1ae941735\"\r\n                  onChange={this.handleChange}\r\n                  checked={this.state.institution === '4bf58dd8d48988d1ae941735'}\r\n                  tabIndex=\"4\"\r\n                />\r\n                <label className=\"radioButtonLabel\" htmlFor=\"university\">\r\n                  University\r\n                </label>\r\n\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"institution\"\r\n                  id=\"college\"\r\n                  className=\"radioButtonDot\"\r\n                  value=\"4bf58dd8d48988d1a2941735\"\r\n                  onChange={this.handleChange}\r\n                  checked={this.state.institution === '4bf58dd8d48988d1a2941735'}\r\n                  tabIndex=\"4\"\r\n                />\r\n                <label className=\"radioButtonLabel\" htmlFor=\"college\">\r\n                  College\r\n                </label>\r\n\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"institution\"\r\n                  id=\"trade\"\r\n                  className=\"radioButtonDot\"\r\n                  value=\"4bf58dd8d48988d1ad941735\"\r\n                  onChange={this.handleChange}\r\n                  checked={this.state.institution === '4bf58dd8d48988d1ad941735'}\r\n                  tabIndex=\"4\"\r\n                />\r\n                <label className=\"radioButtonLabel\" htmlFor=\"trade\">\r\n                  Trade School\r\n                </label>\r\n              </div>\r\n\r\n              <label className=\"userInputLabel\" htmlFor=\"search\">\r\n                Schools Near:\r\n              </label>\r\n              <input\r\n                className=\"userInput\"\r\n                type=\"text\"\r\n                name=\"userInput\"\r\n                id=\"search\"\r\n                onChange={this.handleChange}\r\n                value={this.state.userInput}\r\n                tabIndex=\"5\"\r\n                placeholder=\"enter a city\"\r\n              />\r\n\r\n              <label htmlFor=\"submit\" className=\"visuallyHidden\">\r\n                Submit Search\r\n              </label>\r\n              <input\r\n                className=\"generalButton\"\r\n                type=\"submit\"\r\n                id=\"submit\"\r\n                value=\"Get Schools List\"\r\n                tabIndex=\"6\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* returned results from the api call */}\r\n        <School\r\n          schoolsList={this.state.schoolsList}\r\n          setBookmarkState={this.setBookmarkState}\r\n          userSelectSchoolId={this.userSelectSchoolId}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  return (\r\n    <header>\r\n        <nav className=\"nav\">\r\n          <div className=\"wrapper\">\r\n            <NavLink to=\"/\" className=\"navLink\" tabIndex='1'><h1>College Navigator</h1></NavLink>\r\n            <ul className=\"navList\">\r\n            <li className=\"navItem\"><NavLink to=\"/\" className=\"navLink\" tabIndex='2'>Search</NavLink></li>\r\n            <li className=\"navItem\"><NavLink to=\"/notes\" className=\"navLink\" tabIndex='3'>Bookmarks</NavLink></li>\r\n            </ul>\r\n            \r\n            <ul className=\"hiddenNavList\">\r\n            <li className=\"navItem\"><NavLink to=\"/\" className=\"navLink\" aria-label=\"search\" tabIndex='2'><i className=\"fas fa-search\"></i></NavLink></li>\r\n            <li className=\"navItem\"><NavLink to=\"/notes\" className=\"navLink\" tabIndex='3' aria-label=\"bookmarks\"><i className=\"fas fa-clipboard-list\"></i></NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport uuid from 'uuid';\r\nimport swal from 'sweetalert';\r\n\r\nclass AddSchool extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      // user inputs from the form fields\r\n      name: '',\r\n      address: '',\r\n      note: '',\r\n      category: '',\r\n      id: ''\r\n    };\r\n  }\r\n\r\n  // handle change for form change\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // handle submit of form\r\n  handleSubmit = e => {\r\n    this.setState({\r\n      // generated an ID from uuid for custom inputs so they match the saved schools from the api\r\n      id: uuid.v4()\r\n    });\r\n\r\n    // RegEx test to ensure search field isn't an empty string\r\n    if (\r\n      this.state.name !== '' &&\r\n      this.state.address !== '' &&\r\n      /^\\s*$/.test(this.state.name) === false &&\r\n      /^\\s*$/.test(this.state.address) === false &&\r\n      this.state.category !== ''\r\n    ) {\r\n      // push the added school to the database\r\n      const dbRef = firebase.database().ref();\r\n      dbRef.push(this.state);\r\n      this.setState({\r\n        name: '',\r\n        address: '',\r\n        note: '',\r\n        category: '',\r\n        id: ''\r\n      });\r\n    } else {\r\n      // alert when all fields aren't completed\r\n      swal({\r\n        title: 'oops',\r\n        text: 'please enter required fields',\r\n        icon: 'warning'\r\n      });\r\n    }\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <form className=\"inputSchoolForm singleContent\" onSubmit={this.handleSubmit}>\r\n          <div className=\"inputFieldContainer\">\r\n            <label htmlFor=\"inputSchoolName\">Name of Institution:</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              id=\"inputSchoolName\"\r\n              className=\"inputSchoolName\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"inputFieldContainer\">\r\n            <label htmlFor=\"inputSchoolAddress\">Address:</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              id=\"inputSchoolAddress\"\r\n              className=\"inputSchoolAddress\"\r\n              name=\"address\"\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <fieldset className=\"inputFieldContainerRadio\">\r\n            <legend className=\"visuallyHidden\">Category:</legend>\r\n\r\n            <input\r\n              className=\"radioButtonDot\"\r\n              type=\"radio\"\r\n              name=\"category\"\r\n              id=\"radioButtonCollege\"\r\n              value=\"College\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.category === 'College'}\r\n            />\r\n            <label htmlFor=\"radioButtonCollege\" className=\"radioButtonLabel\">\r\n              College\r\n            </label>\r\n            <input\r\n              className=\"radioButtonDot\"\r\n              type=\"radio\"\r\n              name=\"category\"\r\n              id=\"universityButtonCollege\"\r\n              value=\"University\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.category === 'University'}\r\n            />\r\n            <label htmlFor=\"universityButtonCollege\" className=\"radioButtonLabel\">\r\n              University\r\n            </label>\r\n            <input\r\n              className=\"radioButtonDot\"\r\n              type=\"radio\"\r\n              name=\"category\"\r\n              id=\"radioButtonTrade\"\r\n              value=\"Trade School\"\r\n              onChange={this.handleChange}\r\n              checked={this.state.category === 'Trade School'}\r\n            />\r\n            <label htmlFor=\"radioButtonTrade\" className=\"radioButtonLabel\">\r\n              Trade School\r\n            </label>\r\n          </fieldset>\r\n\r\n          <div className=\"inputFieldContainer\">\r\n            <label htmlFor=\"inputSchoolNote\">Note (optional):</label>\r\n            <textarea\r\n              id=\"inputSchoolNote\"\r\n              placeholder=\"Note\"\r\n              className=\"inputSchoolNote\"\r\n              name=\"note\"\r\n              value={this.state.note}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <label htmlFor=\"inputSchoolSubmit\" className=\"visuallyHidden\">\r\n            Submit\r\n          </label>\r\n          <input\r\n            type=\"submit\"\r\n            id=\"inputSchoolSubmit\"\r\n            className=\"inputSchoolSubmit generalButton\"\r\n            value=\"Save\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSchool;\r\n","import React, { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport jump from 'jump.js';\r\nimport { CircleArrow as ScrollUpButton } from 'react-scroll-up-button';\r\n\r\nimport AddSchool from './AddSchool.js';\r\n\r\nclass Notes extends Component {\r\n  constructor() {\r\n    super();\r\n    this.focusHere = React.createRef();\r\n\r\n    this.state = {\r\n      // list of all bookmarked items in firebase\r\n      bookmarkList: [],\r\n      //  user items are the editable inputted data for each school in the form fields\r\n      userNote: '',\r\n      userName: '',\r\n      userAddress: '',\r\n      userCategory: '',\r\n\r\n      // class name toggle of modal status\r\n      modalOpen: 'close',\r\n      // the id of the selected school to be edited\r\n      selectedId: ''\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // sets focus to to the item\r\n    if(this.state.modalOpen !== prevState.modalOpen) {\r\n      this.focusHere.current.focus();\r\n    }\r\n    // this.focusHere.current.focus();\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n    // pulls all data from firebase and listens for change\r\n    dbRef.on('value', response => {\r\n      const data = response.val();\r\n      const updateBookmark = [];\r\n      for (let item in data) {\r\n        updateBookmark.push({\r\n          key: item,\r\n          name: data[item].name,\r\n          address: data[item].address,\r\n          id: data[item].id,\r\n          note: data[item].note,\r\n          category: data[item].category\r\n        });\r\n      }\r\n      this.setState({\r\n        bookmarkList: updateBookmark\r\n      });\r\n    });\r\n  }\r\n\r\n  // handle change for form\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // handle submit of form\r\n  handleSubmit = e => {\r\n    const dbRef = firebase.database().ref(this.state.selectedId);\r\n\r\n    // if the user inputs are not empty then write input into firebase at corresponding data node\r\n    if (this.state.userName !== '') {\r\n      dbRef.child('name').set(this.state.userName);\r\n    }\r\n    if (this.state.userAddress !== '') {\r\n      dbRef.child('address').set(this.state.userAddress);\r\n    }\r\n    if (this.state.userCategory !== '') {\r\n      dbRef.child('category').set(this.state.userCategory);\r\n    }\r\n    if (this.state.userNote !== '' && this.state.userNote !== undefined) {\r\n      dbRef.child('note').set(this.state.userNote);\r\n    }\r\n\r\n    // close the modal\r\n    this.closeModal();\r\n\r\n    // clears the inputs\r\n    this.setState({\r\n      userNote: '',\r\n      userAddress: '',\r\n      userName: '',\r\n      userCategory: ''\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  // edit note function\r\n  editNote = key => {\r\n    // finds the note to the edited by it's key\r\n    const found = this.state.bookmarkList.find(item => item.key === key);\r\n\r\n    // opens the modal with the corresponding data in the form fields\r\n    this.setState({\r\n      modalOpen: 'open',\r\n      selectedId: key,\r\n      userName: found.name,\r\n      userAddress: found.address,\r\n      userNote: found.note,\r\n      userCategory: found.category\r\n    });\r\n  };\r\n\r\n  // remove note function from the database\r\n  removeBookmark = key => {\r\n    const dbRef = firebase.database().ref(key);\r\n    dbRef.remove();\r\n  };\r\n\r\n  // close modal\r\n  closeModal = () => {\r\n    this.setState({\r\n      modalOpen: 'close'\r\n    });\r\n  };\r\n\r\n  // jump scroll\r\n  handleScroll = () => {\r\n    jump('.inputSchoolForm', {\r\n      duration: 1000,\r\n      a11y: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"noteContainer\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"bookmarks\">\r\n            <h2>BOOKMARKS</h2>\r\n          </div>\r\n          <button onClick={this.handleScroll} className=\"addSign\">\r\n            <i className=\"fas fa-plus\" aria-hidden=\"true\" />\r\n            <p>Add Institution</p>\r\n          </button>\r\n        </div>\r\n\r\n        <div className={`modalWrapper ${this.state.modalOpen}`}>\r\n          <div className=\"detailsOverlay\" />\r\n\r\n          <div className=\"detailsModal\">\r\n            {/* close modal button */}\r\n            <button onClick={this.closeModal} className=\"closeButton\">\r\n              <i className=\"fas fa-times\" aria-label=\"close modal\" />\r\n            </button>\r\n\r\n            <form action=\"\" className=\"editForm\" onSubmit={this.handleSubmit}>\r\n              <label htmlFor=\"name\">Name of Institution:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"userName\"\r\n                onChange={this.handleChange}\r\n                value={this.state.userName}\r\n                ref={this.focusHere}\r\n              />\r\n\r\n              <label htmlFor=\"address\">Address:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"address\"\r\n                name=\"userAddress\"\r\n                onChange={this.handleChange}\r\n                value={this.state.userAddress}\r\n              />\r\n\r\n              <fieldset className=\"inputFieldContainerRadio\">\r\n                <legend className=\"visuallyHidden\">Category:</legend>\r\n\r\n                <input\r\n                  className=\"radioButtonDot \"\r\n                  type=\"radio\"\r\n                  name=\"userCategory\"\r\n                  id=\"college\"\r\n                  value=\"College\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <label htmlFor=\"college\">College</label>\r\n                <input\r\n                  className=\"radioButtonDot\"\r\n                  type=\"radio\"\r\n                  name=\"userCategory\"\r\n                  id=\"university\"\r\n                  value=\"University\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <label htmlFor=\"university\">University</label>\r\n                <input\r\n                  className=\"radioButtonDot \"\r\n                  type=\"radio\"\r\n                  name=\"userCategory\"\r\n                  id=\"tradeSchool\"\r\n                  value=\"Trade School\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <label htmlFor=\"tradeSchool\">Trade School</label>\r\n              </fieldset>\r\n\r\n              <label htmlFor=\"addNote\">Add Note</label>\r\n              <textarea onChange={this.handleChange} value={this.state.userNote} name=\"userNote\" />\r\n\r\n              <input className=\"generalButton\" type=\"submit\" value=\"enter\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <ul className=\"notes wrapper\">\r\n          {this.state.bookmarkList.map(item => {\r\n            return (\r\n              <li key={item.key} className=\"singleNote singleContent\" tabIndex=\"0\">\r\n                <div className=\"textWrapper\">\r\n                  <p className=\"schoolName\">Institution: {item.name}</p>\r\n                  <p className=\"address\"> Address: {item.address}</p>\r\n                  <p className=\"category\">Category: {item.category}</p>\r\n                  <p className=\"note\"> Note: {item.note}</p>\r\n                </div>\r\n\r\n                <button\r\n                  className=\"generalButton\"\r\n                  onClick={() => {\r\n                    this.editNote(item.key);\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-pen\" aria-hidden=\"true\" />Edit\r\n                </button>\r\n\r\n                <button\r\n                  className=\"generalButton\"\r\n                  onClick={() => {\r\n                    this.removeBookmark(item.key);\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-trash-alt\" aria-hidden=\"true\" />Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          <ScrollUpButton\r\n            AnimationDuration={500}\r\n            ShowAtPosition={350}\r\n            style={{\r\n              fill: `#073330`,\r\n              height: 30,\r\n              width: 30,\r\n              right: 15,\r\n              border: `3px solid #073330`,\r\n              background: `rgba(255, 255, 255, 0.848)`\r\n            }}\r\n          />\r\n        </ul>\r\n\r\n        <AddSchool />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        Powered! by{' '}\r\n        <a href=\"https://developer.foursquare.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Foursquare API\r\n        </a>\r\n      </p>\r\n      <p>Made by Andrew, David, Frankie and Jasmine</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport './styles/style.scss';\r\n\r\n// imported components\r\nimport Search from './components/Search.js';\r\nimport Nav from './components/Nav.js';\r\nimport Notes from './components/Notes.js';\r\nimport Footer from \"./components/Footer\"\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      // hashrouter for gh-pages\r\n      <HashRouter>\r\n        <Nav />\r\n        <Route exact path=\"/\" component={Search} />\r\n        <Route path='/notes' component={Notes} />\r\n        <Footer />\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}